digraph "Misbehaving"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Misbehaving",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ArgsManager::GetArg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager.html#a565c101a8d753ca2d71c7069a9d411c1",tooltip="Return string argument or default value. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ArgsManager::IsArgNegated",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager.html#a279ccbf7bbe9de5dceb8c6bfd1736583",tooltip="Return true if the argument was originally passed as a negated option, i.e. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ArgsManagerHelper::\lNetworkArg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager_helper.html#a863ddbcfbd113cf88cf622a0a4e32c1d",tooltip="Convert regular argument into the network-specific setting. "];
  Node2 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ArgsManagerHelper::\lGetArg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager_helper.html#aa4f8f77dc468b29cffe50513c78a87cd"];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ArgsManagerHelper::\lGetArgHelper",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager_helper.html#a1804a95992b4e10d04f0b92c53032b29",tooltip="Return true/false if an argument is set in a map, and also return the first (or last) of the possibly..."];
  Node5 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ArgsManagerHelper::\lUseDefaultSection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_args_manager_helper.html#a43f3488403e4f0433ade323e48008359",tooltip="Determine whether to use config settings in the default section, See also comments around ArgsManager..."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CChain::Contains",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_chain.html#a1ab1fe2932227af222699c64847e838b",tooltip="Efficiently check whether a block is present in this chain. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CBlockIndex::IsValid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_block_index.html#ab79ac7f3db34001898a371ecce27808f",tooltip="Check whether this block index entry is valid up to the passed validity level. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CBlockIndex::GetBlockTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_block_index.html#ab63b774ae798f5f9e54b400ac8b5ef4b"];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="GetBlockProofEquivalentTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chain_8cpp.html#abe314b9d901829ab0166322b67cffd70",tooltip="Return the time it would take to redo the work difference between from and to, assuming the current h..."];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="GetBlockProof",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chain_8cpp.html#a334aa8015cc7185f7fdf484783e40f38"];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="arith_uint256::SetCompact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarith__uint256.html#a06c0f1937edece69b8d33f88e8d35bc8",tooltip="The \"compact\" format is a representation of a whole number N using an unsigned 32bit number similar t..."];
  Node11 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="base_uint::bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a4867652ab4163a10ac4e3d04f0352423",tooltip="Returns the position of the highest bit set plus one, or zero if the value is zero. "];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="base_uint::base_uint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aafd4418923a92b58a1c360e657fa7d83"];
  Node14 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="base_uint::operator\<\<=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#acb449d2fcb5af767fa6b01890e836a4e"];
  Node14 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="base_uint::operator\>\>=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a4e0344432bbcce79525fd2c182173b3b"];
  Node14 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="base_uint::operator*=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aa70b7d954258d2cd4bb77721e357fd40"];
  Node14 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="base_uint::operator/=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ad6fa7e22ab995247c0bf298069732e1d"];
  Node19 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="base_uint::CompareTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac9777c80cfcf1355cf17258027ca35bb"];
  Node14 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="base_uint::EqualTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a39817436d7ba143e8d52abc475097384"];
  Node14 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="base_uint::getdouble",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aa701be5115bacf02c299b05598cf616d"];
  Node14 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="base_uint::GetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac9929c28600796a9acf75881bb750576"];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ArithToUint256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arith__uint256_8cpp.html#af4848fa3f8b64d222b5d8a370bc72458"];
  Node24 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="base_blob::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#aeee68e00ceeacf49086e98b661e017ff"];
  Node23 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="base_blob::GetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#a9541747b1f91f9469ac0aff90665bd32"];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="HexStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#af003e10d5d34c3271ca57ec79059a5ae"];
  Node14 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="base_uint::ToString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac3080a72402cadf28dbc9f9b69cc60be"];
  Node14 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="base_uint::SetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ade1a897fac931f28f54998c92c797228"];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="UintToArith256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arith__uint256_8cpp.html#a6a6e0e2e41ba7e31c4a741eb2426a516"];
  Node30 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="uint256S",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$uint256_8h.html#a52e679560cc1ebf68f878ed69e38f259"];
  Node31 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="base_blob::SetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#a5ec1f681a2830f4e180fe664c0eb4dd0"];
  Node32 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="IsSpace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#aa30de1eac29287732050df7168cde03a",tooltip="Tests if the given character is a whitespace character. "];
  Node33 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ParseInt32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a28581aab6ddb04da2c69bd0f0ffee6ae",tooltip="Convert string to signed 32-bit integer with strict parse error feedback. "];
  Node33 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ParseInt64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a7598ac1ae52f69abe5f103fc6e4c9bd9",tooltip="Convert string to signed 64-bit integer with strict parse error feedback. "];
  Node33 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ParseUInt32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ad4cd67d1bc9cc91801e9c22a0bd94ca7",tooltip="Convert decimal string to unsigned 32-bit integer with strict parse error feedback. "];
  Node33 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ParseUInt64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ab721ae646504bb11a2ac467cc9013659",tooltip="Convert decimal string to unsigned 64-bit integer with strict parse error feedback. "];
  Node33 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ParseDouble",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ab126210409626dcb61aeb0e4300a8a46",tooltip="Convert string to double with strict parse error feedback. "];
  Node32 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ToLower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a3556fcd948bc859caaa04f7355a71b16",tooltip="Converts the given character to its lowercase equivalent. "];
  Node39 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="Downcase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a0112c4a0e8c623b7fc4a52730c57e2d0",tooltip="Converts the given string to its lowercase equivalent. "];
  Node40 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="HexDigit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8cpp.html#aa59e8a8c5a39cb5041f93bb95dd02119"];
  Node11 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="base_uint::GetLow64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#abf39b71afc016b333b8996def4c6bc40"];
}
