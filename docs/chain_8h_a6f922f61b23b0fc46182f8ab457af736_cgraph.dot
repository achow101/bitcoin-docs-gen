digraph "GetBlockProofEquivalentTime"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="GetBlockProofEquivalentTime",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="GetBlockProof",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chain_8cpp.html#a334aa8015cc7185f7fdf484783e40f38"];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="arith_uint256::SetCompact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarith__uint256.html#a06c0f1937edece69b8d33f88e8d35bc8",tooltip="The \"compact\" format is a representation of a whole number N using an unsigned 32bit number similar t..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="base_uint::bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a4867652ab4163a10ac4e3d04f0352423",tooltip="Returns the position of the highest bit set plus one, or zero if the value is zero. "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="base_uint::base_uint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aafd4418923a92b58a1c360e657fa7d83"];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="base_uint::operator\<\<=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#acb449d2fcb5af767fa6b01890e836a4e"];
  Node4 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="base_uint::operator\>\>=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a4e0344432bbcce79525fd2c182173b3b"];
  Node4 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="base_uint::operator*=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aa70b7d954258d2cd4bb77721e357fd40"];
  Node4 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="base_uint::operator/=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ad6fa7e22ab995247c0bf298069732e1d"];
  Node9 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="base_uint::CompareTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac9777c80cfcf1355cf17258027ca35bb"];
  Node4 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="base_uint::EqualTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a39817436d7ba143e8d52abc475097384"];
  Node4 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="base_uint::getdouble",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aa701be5115bacf02c299b05598cf616d"];
  Node4 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="base_uint::GetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac9929c28600796a9acf75881bb750576"];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ArithToUint256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arith__uint256_8cpp.html#af4848fa3f8b64d222b5d8a370bc72458"];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="base_blob::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#aeee68e00ceeacf49086e98b661e017ff"];
  Node13 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="base_blob::GetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#a9541747b1f91f9469ac0aff90665bd32"];
  Node16 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="HexStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#af003e10d5d34c3271ca57ec79059a5ae"];
  Node4 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="base_uint::ToString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ac3080a72402cadf28dbc9f9b69cc60be"];
  Node4 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="base_uint::SetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#ade1a897fac931f28f54998c92c797228"];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="UintToArith256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arith__uint256_8cpp.html#a6a6e0e2e41ba7e31c4a741eb2426a516"];
  Node20 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="uint256S",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$uint256_8h.html#a52e679560cc1ebf68f878ed69e38f259"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="base_blob::SetHex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__blob.html#a5ec1f681a2830f4e180fe664c0eb4dd0"];
  Node22 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="IsSpace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#aa30de1eac29287732050df7168cde03a",tooltip="Tests if the given character is a whitespace character. "];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ParseInt32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a28581aab6ddb04da2c69bd0f0ffee6ae",tooltip="Convert string to signed 32-bit integer with strict parse error feedback. "];
  Node23 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ParseInt64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a7598ac1ae52f69abe5f103fc6e4c9bd9",tooltip="Convert string to signed 64-bit integer with strict parse error feedback. "];
  Node23 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ParseUInt32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ad4cd67d1bc9cc91801e9c22a0bd94ca7",tooltip="Convert decimal string to unsigned 32-bit integer with strict parse error feedback. "];
  Node23 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ParseUInt64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ab721ae646504bb11a2ac467cc9013659",tooltip="Convert decimal string to unsigned 64-bit integer with strict parse error feedback. "];
  Node23 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ParseDouble",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#ab126210409626dcb61aeb0e4300a8a46",tooltip="Convert string to double with strict parse error feedback. "];
  Node22 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ToLower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a3556fcd948bc859caaa04f7355a71b16",tooltip="Converts the given character to its lowercase equivalent. "];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Downcase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8h.html#a0112c4a0e8c623b7fc4a52730c57e2d0",tooltip="Converts the given string to its lowercase equivalent. "];
  Node30 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="HexDigit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$strencodings_8cpp.html#aa59e8a8c5a39cb5041f93bb95dd02119"];
  Node1 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="base_uint::GetLow64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#abf39b71afc016b333b8996def4c6bc40"];
}
